<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on Damian Galarza | Technical Partner for Startups &amp; Fractional CTO</title><link>https://damiangalarza.com/tags/javascript/</link><description>Recent content in Javascript on Damian Galarza | Technical Partner for Startups &amp; Fractional CTO</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 02 Jun 2012 21:14:30 +0000</lastBuildDate><atom:link href="https://damiangalarza.com/tags/javascript/atom.xml" rel="self" type="application/rss+xml"/><item><title>FB.ui Dialog Position bug in Webkit</title><link>https://damiangalarza.com/posts/2012-06-02-fb-ui-dialog-position-bug-in-webkit/</link><pubDate>Sat, 02 Jun 2012 21:14:30 +0000</pubDate><guid>https://damiangalarza.com/posts/2012-06-02-fb-ui-dialog-position-bug-in-webkit/</guid><description>Fix a centering issue of FB.Dialog&amp;rsquo;s within scrolled pages in Webkit.</description></item><item><title>CSS3 Transition Idiom</title><link>https://damiangalarza.com/posts/2012-04-02-css3-transition-idiom/</link><pubDate>Mon, 02 Apr 2012 02:58:25 +0000</pubDate><guid>https://damiangalarza.com/posts/2012-04-02-css3-transition-idiom/</guid><description>Exploring the use of CSS3 transitions, including browser feature detection, graceful degradation, and a simple idiom for applying transitions with fallbacks to JavaScript animations. Discusses the benefits of CSS transitions and methods for detecting browser support.</description></item><item><title>Bringing back the image map</title><link>https://damiangalarza.com/posts/2010-12-27-bringing-back-the-image-map/</link><pubDate>Mon, 27 Dec 2010 18:34:59 +0000</pubDate><guid>https://damiangalarza.com/posts/2010-12-27-bringing-back-the-image-map/</guid><description>A look at using image maps in modern web development, including a case study on creating clickable triangular areas, handling multiple instances of the same image map, and using JavaScript to determine which image was clicked.</description></item><item><title>Using Uploadify with Rails 3</title><link>https://damiangalarza.com/posts/2010-08-25-using-uploadify-with-rails-3/</link><pubDate>Wed, 25 Aug 2010 02:29:53 +0000</pubDate><guid>https://damiangalarza.com/posts/2010-08-25-using-uploadify-with-rails-3/</guid><description>&lt;p&gt;I recently worked on a couple of Rails projects which both implemented the ability to upload photos to the server. One of these projects required the ability to upload multiple files at once and since HTML5 multi-file uploads aren&amp;rsquo;t ready yet I needed another solution. So I decided to move forward using a Flash based uploader, specifically &lt;a href="http://www.uploadify.com/"&gt;Uploadify&lt;/a&gt;. Uploadify is a jQuery plugin which allows you to upload multiple files through a Flash based interface which provides helpful functionality like progress bars and multi-upload queuing, along with this, it&amp;rsquo;s super easy to use.&lt;/p&gt;</description></item><item><title>About iPhone Web Applications</title><link>https://damiangalarza.com/posts/2009-07-27-about-iphone-web-applications/</link><pubDate>Mon, 27 Jul 2009 13:53:37 +0000</pubDate><guid>https://damiangalarza.com/posts/2009-07-27-about-iphone-web-applications/</guid><description>&lt;p&gt;Let me start by this post by specifying that it actually originated from another post that I’m working on right now, but while writing it I went off on quite a tangent that I decided it was time to make it into a completely separate post, and start off with it. So this is part one of an iPhone web application piece that I am working on. While I am it, let me point out what the scope of this article is. This article is not about how to write an iPhone web application. It does not go into details on the syntax or use of technologies for the iPhone. It does explain some of the misconceptions between iPhone applications, iPhone targeted websites, and finally, iPhone Web Applications. I do plan to write more about the iPhone web application technologies and provide some examples and working code, but that is all currently beyond the scope of this article.&lt;/p&gt;
&lt;p&gt;While researching on the topic over the last few weeks, I discovered what I believe is a misconception of an iPhone web application, and my goal is to hopefully, clear things up.&lt;/p&gt;
&lt;p&gt;Let’s start by defining some of the possible ways of targeting an iPhone user, which actually diverges into two separate categories of its own. The first and probably the most popular way of targeting an iPhone user is through an iPhone app, sold through the iTunes App store. Coding and compiling Objective C/Cocoa based native iPhone applications.&lt;/p&gt;
&lt;p&gt;Yet there are still other ways of creating a custom user experience for a user on the iPhone.&lt;/p&gt;</description></item></channel></rss>